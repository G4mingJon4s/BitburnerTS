import { NS } from "@ns";

export const TEMPSCRIPTURL = "tempDoFunc.js";
export const TEMPLATEDOURL = "/exploit/funcTemplate.txt";
export const OUTSOURCEHOST = "foodnstuff";

export async function outsource(ns: NS, func: string, ...args: (string | number | boolean)[]) {
	const funcRegEx = /\$FUNC\$/;
	const argsRegEx = /\$ARGS\$/;

	const convertedArgs = args.map(a => String(a)) ?? [];

	const template = ns.read(TEMPLATEDOURL).normalize().valueOf();

	console.log("BEFORE:", template);

	const withFunc = template.replace(funcRegEx, func);
	const script = withFunc.replace(argsRegEx, convertedArgs.toString());

	console.log("TEMPLATE:", script);

	ns.write(TEMPSCRIPTURL, script, "w");
	ns.scp(TEMPSCRIPTURL, OUTSOURCEHOST);
	const pid = ns.exec(TEMPSCRIPTURL, OUTSOURCEHOST, 1);
	if (pid === 0) return null;

	const handle = ns.getPortHandle(pid);
	while (handle.empty()) await ns.sleep(1);

	const data = JSON.parse(handle.read() as string) as unknown;
	handle.clear();

	return data;
}